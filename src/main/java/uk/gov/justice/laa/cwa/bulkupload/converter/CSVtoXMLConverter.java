package uk.gov.justice.laa.cwa.bulkupload.converter;


import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.util.StringTokenizer;
import java.util.HashMap;
import java.util.ArrayList;
import java.util.List;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.OutputKeys;
import java.util.List;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Text;
/**
 *
 * A conversion class written to convert a CSV submission file into XML format
 * This is not a generic conversion class. It is written for a specific file format
 * and excepts the input file records in the following sequence and format.
 *
 * OFFICE,account=A10B1,
 * SCHEDULE,submissionPeriod=SEP2007,areaOfLaw=CRIMELOWER,scheduleNum=2,
 * OUTCOME,matterType=ABCD:CDVF, caseStartDate=12/12/2007, caseId=rf45, UFN=12122007/A/ABC,
 */
public class CSVtoXMLConverter {

    /**
     * DOM object representing the XML file created.
     */
    static Document document;
    static String SCHEMA_LOCATION_NAME  = "xsi:schemaLocation";
    static String SCHEMA_LOCATION_VALUE = "http://www.legalservices.gov.uk/sms/ActivityManagement/XMLSchema/ LSCSMSBulkLoadSchemaV3.xsd";
    static String SMS_NAMESPACE_NAME    = "xmlns";
    static String SMS_NAMESPACE_VALUE   = "http://www.legalservices.gov.uk/sms/ActivityManagement/XMLSchema/";
    static String W3C_NAMESPACE_NAME    = "xmlns:xsi";
    static String W3C_NAMESPACE_VALUE   = "http://www.w3.org/2001/XMLSchema-instance";



    /**
     * @param inputStream
     * @param outputStream
     * @return OutputStream
     * @throws IOException
     * static method which converts submission data from csv format to xml
     * @throws ParserConfigurationException
     */
//    public static OutputStream convert(InputStream inputStream, OutputStream outputStream) throws Exception, ParserConfigurationException{
    public static HashMap convert(InputStream inputStream, OutputStream outputStream) throws Exception, ParserConfigurationException{
        HashMap returnValues = new HashMap(2);
        ArrayList exceptions = null;

        StreamResult result = new StreamResult(outputStream);
        try {
            //build DOM object from input stream
            exceptions = (ArrayList) buildDom(inputStream);

            // Use a Transformer for output
            TransformerFactory tFactory = TransformerFactory.newInstance();
            Transformer transformer = tFactory.newTransformer();
            // bug with Java 1.4 and 1.5 for indentation, so will not use at moment
            //transformer.setOutputProperty(OutputKeys.METHOD, "xml");
            //transformer.setOutputProperty(OutputKeys.INDENT, "yes");


            DOMSource source = new DOMSource(document);
            transformer.transform(source, result);

        } catch (TransformerConfigurationException tce) {
            // Error generated by the parser
            System.out.println ("\n** Transformer Factory error");
            System.out.println("   " + tce.getMessage() );

            // Use the contained exception, if any
            Throwable x = tce;
            if (tce.getException() != null)
                x = tce.getException();
            x.printStackTrace();

        } catch (TransformerException te) {
            // Error generated by the parser
            System.out.println ("\n** Transformation error");
            System.out.println("   " + te.getMessage() );

            // Use the contained exception, if any
            Throwable x = te;
            if (te.getException() != null)
                x = te.getException();
            x.printStackTrace();

        }
//        return result.getOutputStream();
        returnValues.put("OUTPUT", result.getOutputStream());
        returnValues.put("ERROR", exceptions);

        return returnValues;

    }


    /**
     * @param fileInputStream
     * @param outputStream
     * @return OutputStream
     * @throws IOException
     * static method which converts submission data from csv format to xml
     * @throws ParserConfigurationException
     */
    private static ArrayList buildDom(InputStream fileInputStream) throws IOException, ParserConfigurationException
    {
        DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();

        BufferedReader input = new BufferedReader(new InputStreamReader(fileInputStream));
        Element office = null;
        Element schedule = null;
        StringTokenizer attributes;
        String attribute_name;
        String attribute_value;
        String line;
        int lineNumber = 0;
//      List exceptions;
        ArrayList exceptions = new ArrayList();

        try {

            DocumentBuilder builder = factory.newDocumentBuilder();
            document = builder.newDocument();  // Create a new document
            Element root = (Element) document.createElement("submission");
            root.setAttribute(SCHEMA_LOCATION_NAME, SCHEMA_LOCATION_VALUE);
            root.setAttribute(SMS_NAMESPACE_NAME, SMS_NAMESPACE_VALUE);
            root.setAttribute(W3C_NAMESPACE_NAME, W3C_NAMESPACE_VALUE);

            document.appendChild(root);
            root.appendChild(document.createTextNode("\n "));

            do{
                line = input.readLine();
                lineNumber++;
                if(line != null && !line.equals("")){
                    StringTokenizer tokenizer = new StringTokenizer(line,",");
                    String nextToken = tokenizer.nextToken();
                    nextToken = nextToken.trim();
                    if(nextToken.equalsIgnoreCase("OFFICE")){
                        office = document.createElement(nextToken.toLowerCase());
                        while(tokenizer.hasMoreTokens()){
                            nextToken = tokenizer.nextToken();
                            nextToken = nextToken.trim();
                            if(!nextToken.equalsIgnoreCase("")){
                                attributes = new StringTokenizer(nextToken,"=");
                                if(attributes.countTokens() < 2){
                                    // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                    // throw new IOException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken);
                                    // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken));

                                    // exceptions.add( new OAException(
                                    //  "Error in CSV upload - An invalid field has been found in the submission file at line " +
                                    //  lineNumber + ". The invalid entry is: " + nextToken));
                                    /*
                                    exceptions.add( new OAException(
                                            "XXLSC",
                                            "XXLSC_AM_BULKLD_INV_FIELD",
                                            // errTokens, // null,
                                            new MessageToken[] {
                                                    new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                    new MessageToken("TOKEN_NAME", nextToken )
                                            },
                                            OAException.ERROR,
                                            null
                                    ) );
                                     */
                                    // SK added on 07-Oct-2008 SMSFIX296 - End

                                }
                                else { // SK Added on 02-oct-2008 SMSFIX296 - begin
                                    attribute_name = attributes.nextToken();
                                    attribute_name = attribute_name.trim();
                                    attribute_value = attributes.nextToken();
                                    attribute_value = attribute_value.trim();
                                    office.setAttribute(attribute_name, attribute_value);
                                } // SK Added on 02-oct-2008 SMSFIX296 - end
                            }
                        }
                        office.appendChild(document.createTextNode("\n "));
                        root.appendChild(office);
                        office.appendChild(document.createTextNode("\n "));
                    }
                    else // not OFFICE
                    {
                        if(nextToken.equalsIgnoreCase("SCHEDULE")){
                            schedule = document.createElement(nextToken.toLowerCase());
                            while(tokenizer.hasMoreTokens()){
                                nextToken = tokenizer.nextToken();
                                nextToken = nextToken.trim();
                                if(!nextToken.equalsIgnoreCase("")){
                                    attributes = new StringTokenizer(nextToken,"=");
                                    if(attributes.countTokens() < 2){
                                        // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                        // throw new IOException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken);
                                        // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken));

                                        // exceptions.add( new OAException(
                                        //   "Error in CSV upload - An invalid field has been found in the submission file at line " +
                                        //   lineNumber + ". The invalid entry is: "+nextToken));
                                        /*
                                        exceptions.add( new OAException(
                                                "XXLSC",
                                                "XXLSC_AM_BULKLD_INV_FIELD",
                                                new MessageToken[] {
                                                        new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                        new MessageToken("TOKEN_NAME", nextToken )
                                                },
                                                OAException.ERROR,
                                                null
                                        ) );

                                         */
                                        // SK added on 07-Oct-2008 SMSFIX296 - End
                                    }
                                    else { // SK Added on 06-oct-2008 SMSFIX296 - begin
                                        attribute_name = attributes.nextToken();
                                        attribute_name = attribute_name.trim();
                                        attribute_value = attributes.nextToken();
                                        attribute_value = attribute_value.trim();
                                        schedule.setAttribute(attribute_name, attribute_value);
                                    } // SK Added on 06-oct-2008 SMSFIX296 - end
                                }
                            }
                            if(office != null){
                                office.appendChild(document.createTextNode("\n "));
                                office.appendChild(schedule);
                                office.appendChild(document.createTextNode("\n "));
                            }
                            else{
                                // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                // throw new IOException("CSV Error at line " + lineNumber + " of file: No Office specified for this Schedule.");
                                // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: No Office specified for this Schedule."));

                                // exceptions.add( new OAException( "Error in CSV upload - Invalid LSC office account number or schedule number entered on submission file"));
                                /*
                                exceptions.add( new OAException(
                                        "XXLSC",
                                        "XXLSC_AM_BULKLD_NO_OFFICE_SCH",
                                        null,
                                        OAException.ERROR,
                                        null
                                ) );
                                 */
                                // SK added on 07-Oct-2008 SMSFIX296 - End
                            }
                        }
                        else // not SCHEDULE
                        {
                            if(nextToken.equalsIgnoreCase("OUTCOME")){
                                Element outcome = document.createElement(nextToken.toLowerCase());
                                // check first attribute (name/value) is matterType
                                attributes = new StringTokenizer(tokenizer.nextToken(),"=");
                                attribute_name = attributes.nextToken();
                                attribute_name = attribute_name.trim();
                                attribute_value = attributes.nextToken();
                                attribute_value = attribute_value.trim();
                                if(!attribute_name.equalsIgnoreCase("matterType")) {
                                    // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                    // throw new IOException("CSV Error at line " + lineNumber + " of file: Invalid Outcome record. First name/value pair MUST be \"matterType\". Found: "+attribute_name);
                                    // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: Invalid Outcome record. First name/value pair MUST be \"matterType\". Found: "+attribute_name));

                                    // exceptions.add( new OAException(
                                    //   "Error in CSV upload - An invalid outcome line has been found in the submission file at line " + lineNumber +
                                    //   ".  All outcome lines beginning with OUTCOME must be followed by a valid Matter Type code. The invalid entry is: "+
                                    //   attribute_name));
                                    /*
                                    exceptions.add( new OAException(
                                            "XXLSC",
                                            "XXLSC_AM_BULKLD_INV_OUTCOME",
                                            new MessageToken[] {
                                                    new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                    new MessageToken("TOKEN_NAME", attribute_name )
                                            },
                                            OAException.ERROR,
                                            null
                                    ) );
                                     */
                                    // SK added on 07-Oct-2008 SMSFIX296 - End
                                }

                                outcome.setAttribute(attribute_name,attribute_value);
                                outcome.appendChild(document.createTextNode("\n "));

                                while(tokenizer.hasMoreTokens()){
                                    nextToken = tokenizer.nextToken();
                                    nextToken = nextToken.trim();
                                    if(!nextToken.equalsIgnoreCase("")){
                                        attributes = new StringTokenizer(nextToken,"=");
                                        if(attributes.countTokens() < 1) {
                                            // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                            // throw new IOException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken + ","+attributes.countTokens());
                                            // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken + ","+attributes.countTokens()));

                                            // exceptions.add( new OAException(
                                            //   "Error in CSV upload - An invalid field has been found in the submission file at line " +
                                            //   lineNumber + ". The invalid entry is: "+ nextToken ));
                                            /*
                                            exceptions.add( new OAException(
                                                    "XXLSC",
                                                    "XXLSC_AM_BULKLD_INV_FIELD",
                                                    new MessageToken[] {
                                                            new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                            new MessageToken("TOKEN_NAME", nextToken )
                                                    },
                                                    OAException.ERROR,
                                                    null
                                            ) );
                                             */
                                            // SK added on 07-Oct-2008 SMSFIX296 - End
                                        }
                                        attribute_name = attributes.nextToken();
                                        attribute_name = attribute_name.trim();
                                        if(attributes.countTokens() < 1) {
                                            attribute_value = "";
                                        }
                                        else
                                        {
                                            attribute_value = attributes.nextToken();
                                            attribute_value = attribute_value.trim();
                                        }
                                        Element outcomeItem = document.createElement("outcomeItem");
                                        outcomeItem.setAttribute("name",  attribute_name);
                                        outcomeItem.appendChild(document.createTextNode(attribute_value));
                                        outcome.appendChild(document.createTextNode("\t "));
                                        outcome.appendChild(outcomeItem);
                                        outcome.appendChild(document.createTextNode("\n "));
                                    }
                                }
                                if(schedule != null){
                                    schedule.appendChild(outcome);
                                    schedule.appendChild(document.createTextNode("\n \n"));
                                }
                                else{
                                    // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                    // throw new IOException("CSV Error at line " + lineNumber + " of file: No schedule specified for Outcome.");
                                    // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: No schedule specified for Outcome."));

                                    // exceptions.add( new OAException("Error in CSV upload - Invalid schedule number entered on submission file" ) );
                                    /*
                                    exceptions.add( new OAException(
                                            "XXLSC",
                                            "XXLSC_AM_BULKLD_INV_SCH_OUTCOM",
                                            null,
                                            OAException.ERROR,
                                            null
                                    ) );
                                     */
                                    // SK added on 07-Oct-2008 SMSFIX296 - End
                                }
                            }
                            else // not OFFICE
                            {
                                if(nextToken.equalsIgnoreCase("MATTERSTARTS")){
                                    Element matterStarts = document.createElement("newMatterStarts");
                                    matterStarts.appendChild(document.createTextNode("\n "));

                                    while(tokenizer.hasMoreTokens()){
                                        nextToken = tokenizer.nextToken();
                                        nextToken = nextToken.trim();
                                        if(!nextToken.equalsIgnoreCase("")){
                                            attributes = new StringTokenizer(nextToken,"=");
                                            if(attributes.countTokens() < 2){
                                                // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                                // throw new IOException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken);
                                                // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: An invalid name/value field has been encountered. Found: "+nextToken));

                                                // exceptions.add( new OAException(
                                                //   "Error in CSV upload - An invalid field has been found in the submission file at line " +
                                                //   lineNumber + ". The invalid entry is: "+ nextToken ) );
                                                /*
                                                exceptions.add( new OAException(
                                                        "XXLSC",
                                                        "XXLSC_AM_BULKLD_INV_FIELD",
                                                        new MessageToken[] {
                                                                new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                                new MessageToken("TOKEN_NAME", nextToken )
                                                        },
                                                        OAException.ERROR,
                                                        null
                                                ) );
                                                 */
                                                // SK added on 07-Oct-2008 SMSFIX296 - End
                                            }
                                            else { // SK Added on 06-oct-2008 SMSFIX296 - begin
                                                attribute_name = attributes.nextToken();
                                                attribute_value = attributes.nextToken();
                                                Element matterStart = document.createElement("matterStart");
                                                matterStart.setAttribute("code",  attribute_name);
                                                matterStart.appendChild(document.createTextNode(attribute_value));
                                                matterStarts.appendChild(matterStart);
                                                matterStarts.appendChild(document.createTextNode("\n  "));
                                            } // SK Added on 06-oct-2008 SMSFIX296 - end
                                        }
                                    }
                                    if(schedule != null){
                                        schedule.appendChild(matterStarts);
                                        schedule.appendChild(document.createTextNode("\n "));
                                    }
                                    else{
                                        // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                        // throw new IOException("CSV Error at line " + lineNumber + " of file: No schedule specified for Matter Starts.");
                                        // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: No schedule specified for Matter Starts."));

                                        // exceptions.add( new OAException( "Error in CSV upload at line " + lineNumber +
                                        // " - No schedule has been specified for New Matter Start Data" ) );
                                        /*
                                        exceptions.add( new OAException(
                                                "XXLSC",
                                                "XXLSC_AM_BULKLD_NO_SCHEDULE_MS",
                                                new MessageToken[] { new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ) },
                                                OAException.ERROR,
                                                null
                                        ) );
                                         */
                                        // SK added on 07-Oct-2008 SMSFIX296 - End
                                    }

                                }

                                // SMSFIX381A - CLR INFO START
                                else  // not MATTERSTARTS
                                {
                                    if(nextToken.equalsIgnoreCase("IMMIGRATIONCLR")){
                                        Element immCLR = document.createElement("immigrationCLR");
                                        immCLR.appendChild(document.createTextNode("\n "));
                                        while(tokenizer.hasMoreTokens()){
                                            nextToken = tokenizer.nextToken();
                                            nextToken = nextToken.trim();
                                            if(!nextToken.equalsIgnoreCase("")){
                                                attributes = new StringTokenizer(nextToken,"=");
                                                if(attributes.countTokens() < 2){
                                                    /*
                                                    exceptions.add( new OAException(
                                                            "XXLSC",
                                                            "XXLSC_AM_BULKLD_INV_FIELD",
                                                            new MessageToken[] {
                                                                    new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                                    new MessageToken("TOKEN_NAME", nextToken )
                                                            },
                                                            OAException.ERROR,
                                                            null
                                                    ) );
                                                     */
                                                }
                                                else {
                                                    attribute_name = attributes.nextToken();
                                                    attribute_value = attributes.nextToken();
                                                    Element immCLRData = document.createElement("immCLRData");
                                                    immCLRData.setAttribute("code",  attribute_name);
                                                    immCLRData.appendChild(document.createTextNode(attribute_value));
                                                    immCLR.appendChild(immCLRData);
                                                    immCLR.appendChild(document.createTextNode("\n  "));
                                                }
                                            }
                                        }
                                        if(schedule != null){
                                            schedule.appendChild(immCLR);
                                            schedule.appendChild(document.createTextNode("\n "));
                                        }
                                        else{
                                            /*
                                            exceptions.add( new OAException(
                                                    "XXLSC",
                                                    "XXLSC_AM_BULKLD_NO_SCHEDULE_CL",
                                                    new MessageToken[] { new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ) },
                                                    OAException.ERROR,
                                                    null
                                            ) );

                                             */
                                        }
                                    }
                                    // SMSFIX381A - CLR INFO END

                                    else // not IMMIGRATIONCLR
                                    {
                                        // SK added on 07-Oct-2008 SMSFIX296 - Begin
                                        // throw new IOException("CSV Error at line " + lineNumber + " of file: Each record must begin with either OFFICE, SCHEDULE, OUTCOME or MATTERSTARTS. Found: "+nextToken);
                                        // exceptions.add( new OAException("CSV Error at line " + lineNumber + " of file: Each record must begin with either OFFICE, SCHEDULE, OUTCOME or MATTERSTARTS. Found: "+nextToken));

                                        // exceptions.add( new OAException(
                                        //   "Error in CSV upload - An invalid outcome line has been found in the submission file at line " + lineNumber +
                                        //   ".  All submission lines must begin with either OFFICE, SCHEDULE, OUTCOME or MATTERSTARTS. The invalid entry is: "+
                                        //   nextToken ) );
                                        /*
                                        exceptions.add( new OAException(
                                                "XXLSC",
                                                "XXLSC_AM_BULKLD_INV_OUTCOME_LN",
                                                new MessageToken[] {
                                                        new MessageToken("LINE_NUMBER", Integer.toString(lineNumber) ),
                                                        new MessageToken("TOKEN_NAME", nextToken )
                                                },
                                                OAException.ERROR,
                                                null
                                        ) );
                                         */
                                        // SK added on 07-Oct-2008 SMSFIX296 - End
                                    } // not IMMIGRATIONCLR
                                } // not MATTERSTARTS
                            } // not OUTCOME
                        } // not SCHEDULE
                    } // not OFFICE
                } // if(line != null && !line.equals(""))
            }while(line != null);
        } catch (ParserConfigurationException pce) {
            // Parser with specified options can't be built
            pce.printStackTrace();

        }
        return exceptions;

    } // buildDom

}

